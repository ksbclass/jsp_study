==Servlet==
실행순서
1.첫번째 요청
	(1)서블릿의 객체화. 생성자호출됨.
	(2)init() 호출됨
	(3)Service()호출됨
		-GET 요청 : doGet 호출
		-POST 요청 : doPost()호출
2. 두번째 요청
	(1) Service() 호출됨
		- GET 요청 : doGet()호출
		- POST 요청 : doPost()호출
		
GET 방식 : 기본 method 방식
POST 방식 : <form method="post" ...> 요청

== JSP ==
1.기본 구성요소
	(1) 지시어(Directive) : <%@ 종류 속성=... %>
		- page : JSP 페이지의 특징을 설정
				 contentType : mime 형태 문서 종류 설정.인코딩 방식
				 import		 : jsp 페이지에서 사용되는 클래스의 패키지 등록
				 isErrorPage : 현재 페이지가 오류 페이지
		- include : 다른페이지를 포함시킬때 사용되는 지시어
				<%@ include file= "포함시킬페이지 이름" %>
				2개의 jsp 페이지가 하나의 서블릿으로 생성 => 변수 공유 가능
		- taglib : 커스텀 태그 사용시 설정 => JSTL 

	(2) 스크립트(Script) : 자바소스의 영역 => 자바 주석이 사용되는 영역
		- 스크립트릿<%... %> : _jspService() 메서드에 자바소스로 생성
		- 표현식 <%= ... %> : 해당되는 값을 웹화면에 출력
							값이 존재 : 변수, 상수, 리터널, 리턴값이 있는 함수
							; 으로 종료하지 않음
							한줄 주석 사용 불가
		- 선언문 <%! ... %> : 서블릿의 멤버로 생성됨. 거의 사용안함.
	(3) 주석 (Comment) : 
		- jsp 주석 <%-- --%> : jsp에서 서블릿으로 생성시 주석됨.
							 서블릿에 보여지지 않음
		-java 주석 : 스크립트 영역에서만 사용 가능함
					서블릿이 컴파일 될때 주석으로 처리됨. 실행되지 않는 영역.
					생성된 서블릿에 보여짐.
		- HTML 주석 <!-- --> : 브라우저에서 주석으로 처리됨. 브라우저의 소스보기에 보여짐.
							  jsp 나 서블릿에서는 주석으로 인식하지 않음.
=========================================================================================
jsp에서 제공되는 내장 객체 (8+1)
 1. request : 요청 객체. 브라우저에서 전달되는 요청 정보 저장 객체
 2. response : 응답 객체. 브라우저로 전달하는 정보를 저장 객체.
 3. pageContext : 현재페이지의 정보를 저장하는 객체.
 4. session : 브라우저의 상태 정보를 저장할 수 있는 객체.
 5. application : 웹어플리케이션(프로젝트) 정보 저장 객체.
 6. out : response 객체의 출력버퍼가 목적지인 출력스트림 객체.
 7. config : 서블릿의 환경변수를 저장하는 객체.
 8. page : 서블릿 객체. this와 같은 객체.
 
 9.exception : 예외객체. error 페이지에서만 제공되는 객체.
 
 =========================================================================================
 영역 개념
  1. page 영역 : 한개의 jsp 페이지가 하나의 page 영역임. => pageContext 객체를 공유함.
  2. request 영역 : 한번의 요청에서 하나의 응답까지의 실행 영역. => request 객체를 공유함.
  3. session 영역 : 하나의 브라우저에서 실행 되는 모든 페이지의 영역. => session 객체를 공유함.
  4. application 영역 : 하나의 프로젝트의 모든 jsp 페이지는  같은 영역. => application 객체를 공유함.
  
  영역 담당 객체 : pageContext,request,session,application
  => 속성 등록,조회,삭제 기능을 가짐.
 	 속성 등록 : setAttribute
 	 속성 조회 : getAttribute
 	 속성 삭제 : removeAttribute